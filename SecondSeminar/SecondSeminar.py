

# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх
# решкой, а некоторые – гербом. Определите минимальное число
# монеток, которые нужно перевернуть, чтобы все монетки были
# повернуты вверх одной и той же стороной. Выведите минимальное
# количество монет, которые нужно перевернуть.

# 5 -> 1 0 1 1 0
# 2


# num=int(input("Введите количество монет: "))
# reshka=0
# eagle=0

# for i in range(0,num):
#     N=int(input("Введите результат 0 - решка, 1-орёл: "))
#     if N == 0:
#         reshka+=1
#     if N == 1:
#         eagle+=1
# if eagle < reshka: 
#     print("Наименьшее количество переворачиваний = ", eagle)
# else:
#     print ("Наименьшее количество переворачиваний = ", reshka)



#######################################################################################################



# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя –
# школьница. Петя помогает Кате по математике. Он задумывает два
# натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для
# этого Петя делает две подсказки. Он называет сумму этих чисел S и их
# произведение P. Помогите Кате отгадать задуманные Петей числа.

# 4 4 -> 2 2
# 5 6 -> 2 3


# S = int(input('введите сумму чисел: '))
# P = int(input('введите произведение чисел: '))
# flag = False 
# for i in range(1,(S//2)):
#     for j in range(1,S):
#         if P % i == 0 and P % j == 0 and i + j == S :
#             print(i , j)
#     #         flag = True  # С флагом покажет только один ответ без него все возможные 
#     # if flag == True:
#     #     break



#######################################################################################################



# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.


# N = int(input('введте число: '))
# m = 2 
# flag = False
# print(m)
# while flag == False:
#     m *= 2 
#     print(m)
#     if N < m * 2 :
#         flag == True
#         break



#######################################################################################################



# 6.Даны положительные числа A, B, C. На прямоугольнике размера A x B размещено максимально возможное
# количество квадратов со стороной C (без наложений).
# Найти количество квадратов, размещенных на прямоугольнике. Операции умножения и деления не использовать.

# A = int(input("введите ширину прямоугольника: "))
# B = int(input("введите длину прямоугольника: "))
# C = int(input("введите сторону вписанных квадратов: "))
# count = 0
# for i in range(C, (A+1), C):
#     for j in range(C, (B+1), C):
#         count +=1
# print(count)



#######################################################################################################



# 4*.Спортсмен-лыжник начал тренировки, пробежав в первый день 10 км. Каждый следующий день он увеличивал 
# длину пробега на P процентов от пробега предыдущего дня (P — вещественное, 0 < P < 50).
# По данному P определить, после какого дня суммарный пробег лыжника за все дни превысит 200 км, 
# и вывести найденное количество дней K (целое) и суммарный пробег S (вещественное число).

# P = float(input('введите процент: '))/100 + 1 
# K = 1
# S = 10
# distance = 200
# speed = 10
# while S < distance:
#     speed *= P
#     S += speed
#     K += 1 
# print(f'дней - {K}, пробег - {S} ')


#######################################################################################################



# 5. Сумма дробей (часть первая)
# Пользователь вводит число N. Найдите сумму чисел: 1 + 1.1 + 1.2 + 1.3 + ... + (1 + N / 10).

# # Ввод:
# >> 5
# # Вывод:
# >> 7.5

# N = float(input("введите: "))
# S = J = 1
# while J < N/10 + 1:
#     J += 0.1
#     S += J
# print(round(S,1))



#######################################################################################################



# 6. Сумма дробей (часть вторая)
# Пользователь вводит число N. Найдите сумму чисел: 1 + 1/2 + 1/3 + ... + 1/N

# # Ввод:
# >> 5
# # Вывод:
# >> 2.283

# N = int(input("введите: "))
# S = J = 1
# for i in range(2, (N+1)):
#     S += J/i
# print(round(S,3))